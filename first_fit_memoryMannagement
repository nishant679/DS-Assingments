#include<iostream>

using namespace std;

class memoryAllocate{
	int frag[100], i, n;
	int fragment;
	public:
	   getData(){
	   	cout<<"Enter fragments [MAX MEMORY SIZE IS 100]"<<endl;
	   	fragment = 0;
	   	i = 0;
	   	while(fragment<=100)
	   	  {
			        cin>>frag[i];
					fragment = fragment + frag[i];
					n = i;		
					i++;
		  }
	   }
	  showMemory()
	  {
	  	 cout<<endl<<"The data memory fragments are "<<endl;
	     for(i=0; i<n; i++)
		 {
	         cout<<frag[i]<<endl;	 
			 //cout<<"number of partition "<<n<<endl;	
	     } 	 
	  }	
	  
	  firstFit()
	      {
	      	int process[100], num;
	      	cout<<"Enter total number of processes "<<endl;
	      	cin>>num;
	      	cout<<"Enter process size [MAX MEMORY IS 100]"<<endl;
	      	for(i=0; i<num; i++)
	      	   {
	      	   	  cin>>process[i];
			   }
			   bool flag=true;
		      for(int j=0; j<num; j++)
		        {
		        	flag = false;
		         	for(int i=0; i<n; i++)
		        	  {
		        	  	 if(process[j] <= frag[i] && frag[i]>=0)
		        	  	    {
		        	  	    	cout<<"Process P"<<j+1<<"  allocated in"<<i+1<<"  segment"<<endl;
		        	  	    	frag[i] = -87878;
		        	  	    	flag = true;
		        	  	    	break;
							  }
						  
					  }
					if(flag != true)
					{
						cout<<"process p"<<j+1<<"not allocated"<<endl;
					}
				}
		  }
};

int main()
{
	memoryAllocate m1;
	m1.getData();
	m1.showMemory();
	m1.firstFit();
	
	
	return 0;
}
